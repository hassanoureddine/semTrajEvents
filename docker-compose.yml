version: "2.2"
services:
  jobmanager:
    image: flink:1.13.2
    ports:
      - "8081:8081"
    command: jobmanager
    container_name: jobmanager
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager   
        state.checkpoints.dir: file:///state
        metrics.reporters: prom
        metrics.reporter.prom.class: org.apache.flink.metrics.prometheus.PrometheusReporter
        metrics.reporter.prom.port: 9250-9260
    volumes:
    - ./flink-metrics-prometheus_2.12-1.13.0.jar:/opt/flink/lib/flink-metrics-prometheus_2.12-1.13.0.jar


  taskmanager1:
    image: flink:1.13.2
    container_name: taskmanager1
    depends_on:
      - jobmanager
    command: taskmanager
    #scale: 1
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
        taskmanager.numberOfTaskSlots: 2
        state.checkpoints.dir: file:///state
        metrics.reporters: prom
        metrics.reporter.prom.class: org.apache.flink.metrics.prometheus.PrometheusReporter
        metrics.reporter.prom.port: 9250-9260
    deploy:
        resources:
            #limits:
              #cpus: '2'
            reservations:
              cpus: '2'
   
  taskmanager2:
    image: flink:1.13.2
    container_name: taskmanager2
    depends_on:
      - jobmanager
    command: taskmanager
    #scale: 1
    environment:
      - |
        FLINK_PROPERTIES=
        jobmanager.rpc.address: jobmanager
        taskmanager.numberOfTaskSlots: 2
        state.checkpoints.dir: file:///state
        metrics.reporters: prom
        metrics.reporter.prom.class: org.apache.flink.metrics.prometheus.PrometheusReporter
        metrics.reporter.prom.port: 9250-9260
    deploy:
        resources:
            #limits:
              #cpus: '2'
            reservations:
              cpus: '2'   
  #taskmanager3:
    #image: flink:1.13.2
    #container_name: taskmanager3
    #depends_on:
      #- jobmanager
    #command: taskmanager
    #scale: 1
    #environment:
      #- |
        #FLINK_PROPERTIES=
        #jobmanager.rpc.address: jobmanager
        #taskmanager.numberOfTaskSlots: 2
        #state.checkpoints.dir: file:///state
        #metrics.reporters: prom
        #metrics.reporter.prom.class: org.apache.flink.metrics.prometheus.PrometheusReporter
        #metrics.reporter.prom.port: 9250-9260     
        
  #taskmanager4:
    #image: flink:1.13.2
    #container_name: taskmanager4
    #depends_on:
      #- jobmanager
    #command: taskmanager
    #scale: 1
    #environment:
      #- |
        #FLINK_PROPERTIES=
        #jobmanager.rpc.address: jobmanager
        #taskmanager.numberOfTaskSlots: 2
        #state.checkpoints.dir: file:///state
        #metrics.reporters: prom
        #metrics.reporter.prom.class: org.apache.flink.metrics.prometheus.PrometheusReporter
        #metrics.reporter.prom.port: 9250-9260      
    
    
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    ports:
    - "9090:9090"
    volumes:
    - ./prometheus.yml:/etc/prometheus/prometheus.yml
    - ./flink.rules.yml:/etc/prometheus/flink.rules.yml
    links:
    - zookeeper


    
  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
    - "3000:3000"
    environment:
    - GF_SECURITY_ADMIN_PASSWORD=flink
    volumes:
    - ./grafana/provisioning/:/etc/grafana/provisioning/
    - ./grafana/grafana_data:/var/lib/grafana
    - ./grafana/certs:/certs

   
    
        
  zookeeper:
    image: confluentinc/cp-zookeeper
    hostname: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      EXTRA_ARGS: -javaagent:/usr/share/jmx_exporter/jmx_prometheus_javaagent-0.12.0.jar=9250:/usr/share/jmx_exporter/zookeeper.yml
      KAFKA_HEAP_OPTS: "-Xmx512M -Xms512M"
    volumes:
    - ./jmx-exporter:/usr/share/jmx_exporter/
    
      
  broker1:
    image: confluentinc/cp-enterprise-kafka
    hostname: broker1
    depends_on:
      - zookeeper
    ports:
      - "9093:9093"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker1:9092,OUTSIDE://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,OUTSIDE://0.0.0.0:9093
      #CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker1:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_BROKER_ID: 1
      #KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      #KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      #CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: zookeeper:2181
      #CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      #CONFLUENT_METRICS_ENABLE: 'true'
      #CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
      KAFKA_DELETE_TOPIC_ENABLE: 'true'
      #KAFKA_ADVERTISED_HOST_NAME: kafka
      #KAFKA_ADVERTISED_PORT: 9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_OPTS: -javaagent:/usr/share/jmx_exporter/jmx_prometheus_javaagent-0.12.0.jar=9250:/usr/share/jmx_exporter/kafka-broker.yml
      KAFKA_HEAP_OPTS: "-Xmx512M -Xms512M"
    volumes:
    - ./jmx-exporter:/usr/share/jmx_exporter/
    
    
  #broker2:
    #image: confluentinc/cp-enterprise-kafka
    #hostname: broker2
    #depends_on:
      #- zookeeper
    #ports:
      #- "9094:9094"
    #environment:
      #KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker2:9092,OUTSIDE://localhost:9094
      #KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,OUTSIDE:PLAINTEXT
      #KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,OUTSIDE://0.0.0.0:9094
      #KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      #KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      #KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      #KAFKA_DELETE_TOPIC_ENABLE: 'true'
      #KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      #KAFKA_OPTS: -javaagent:/usr/share/jmx_exporter/jmx_prometheus_javaagent-0.12.0.jar=9250:/usr/share/jmx_exporter/kafka-broker.yml
      #KAFKA_HEAP_OPTS: "-Xmx512M -Xms512M"
    #volumes:
    #- ./jmx-exporter:/usr/share/jmx_exporter/
    
    
    
 

      
      
  kafka_manager:
    image: hlebalbau/kafka-manager:stable
    restart: always
    depends_on:
      - zookeeper
    ports:
      - "9000:9000"
    environment:
      ZK_HOSTS: "zookeeper:2181"
      APPLICATION_SECRET: "random-secret"
    command: -Dpidfile.path=/dev/null
    
    